{"version":3,"file":"static/js/507.6832569f.chunk.js","mappings":"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","sources":["views/dashboard/admin/admin.js"],"sourcesContent":["\r\nimport React,{useState,useEffect} from 'react'\r\nimport {Row,Col,Modal,Form,Button} from 'react-bootstrap'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport Card from '../../../components/Card'\r\nconst Admin =() =>{\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    const [show1, setShow1] = useState(false);\r\n\r\n    const handleClose1 = () => setShow1(false);\r\n    const handleShow1 = () => setShow1(true);\r\n\r\n    const [show2, setShow2] = useState(false);\r\n\r\n    const handleClose2 = () => setShow2(false);\r\n    // const handleShow2 = () => setShow2(true);\r\n\r\n    const [show3, setShow3] = useState(false);\r\n    const handleClose3 = () => setShow3(false);\r\n\r\n    let history =useHistory()\r\n\r\n\r\n    //check\r\n//     const [status , setStatus] =useState([{\r\n//         check: <input className=\"form-check-input\" type=\"checkbox\"/>,\r\n//     },\r\n//     {\r\n//         check: <input className=\"form-check-input\" type=\"checkbox\"/>,\r\n//     },\r\n//     {\r\n//         check: <input className=\"form-check-input\" type=\"checkbox\"/>,\r\n//     }\r\n\r\n// ])\r\n\r\n    //permission\r\n     const [permission ,setPermission] =useState([ {\r\n                                                        name: 'Role',\r\n                                                        status:false\r\n                                                        \r\n                                                    },\r\n                                                    {\r\n                                                        name: 'Role Add',\r\n                                                        status:true\r\n                                                    },\r\n                                                    {\r\n                                                        name: 'Role List',\r\n                                                        \r\n                                                    },\r\n                                                    {\r\n                                                        name: 'Permission',\r\n                                                        \r\n                                                    },\r\n                                                    {\r\n                                                        name: 'Permission Add',\r\n                                                        \r\n                                                    },\r\n                                                    {\r\n                                                        name: 'Permission List',\r\n                                                        \r\n                                                    }\r\n                                        ])\r\n     const [name,setName] = useState('')\r\n     const [editname, setEditname] = useState('')\r\n     const [permissionupdateid,setUpdate] = useState('')\r\n    function permissionpush(){\r\n\r\n        setPermission([...permission,{name:name}])\r\n        permission.push({\r\n                    name:name\r\n                })\r\n    }\r\n\r\n    function permissiondeleted(index){\r\n        permission.splice(index,1)\r\n    }\r\n    function permissionedit(permissionname, openmodal,permissionid){\r\n        \r\n         setShow2(openmodal);\r\n         setEditname(permissionname); \r\n         setUpdate(permissionid);\r\n    }\r\n    function permissionupdate(){\r\n        permission[permissionupdateid].name=name;\r\n    }\r\n useEffect(\r\n    () =>{\r\n       return permission;\r\n    },[permission,name]\r\n)\r\n\r\n\r\n    //role\r\n    const [role, setRole] = useState([ \r\n                                        {\r\n                                            name:'Admin',\r\n                                            status:true\r\n                                        },\r\n                                        {\r\n                                            name:'DEMO ADMIN',\r\n                                            status:true\r\n                                        },\r\n                                        {\r\n                                            name: 'USER',\r\n                                            status:false\r\n                                        }\r\n                                    ])\r\n    const [name1,setName1] = useState('')\r\n    const [roleeditname, setRolename] = useState('')\r\n    const [roleupdateid, setUpdate1] = useState('')\r\n\r\n    function rolepush   (){\r\n        setRole([...role,{name:name1}])\r\n        role.push({\r\n            name:name1\r\n        })\r\n    }  \r\n\r\n    function roledeleted(index){\r\n        role.splice(index,1)\r\n    }\r\n    function roleedit(rolename, openmodal,roleid){\r\n        setShow3(openmodal);\r\n        setRolename(rolename); \r\n        setUpdate1(roleid);\r\n   }\r\n   function roleupdate(){\r\n    role[roleupdateid].name=name1;\r\n    }\r\nuseEffect(\r\n    () =>{\r\n        return role;\r\n    },[role,name1]\r\n)                                       \r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card>\r\n                        <Card.Header className=\"d-flex justify-content-between flex-wrap\">\r\n                            <div className=\"header-title\">\r\n                                <h4 className=\"card-title mb-0\">Role & Permission</h4>\r\n                            \r\n                            </div>\r\n                            <div>\r\n                                <Button  className=\"text-center btn-primary btn-icon me-2 mt-lg-0 mt-md-0 mt-3\" onClick={handleShow}>\r\n                                    <i className=\"btn-inner\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                                        </svg>\r\n                                    </i>\r\n                                    <span>New Permission</span>\r\n                                </Button>\r\n                                <Modal show={show} onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                    <Modal.Title>Add new permission</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                            <Form.Label>permission title</Form.Label>\r\n                                            <Form.Control type=\"text\" onChange={e => setName(e.target.value)} placeholder=\"Permission Title\" />\r\n                                        </Form.Group>\r\n                                        <Button variant=\"primary\" onClick={\r\n                                          () =>{\r\n                                            permissionpush()\r\n                                            handleClose()\r\n                                          }\r\n                                        }\r\n                                        >\r\n                                            Save\r\n                                        </Button>{' '}\r\n                                        <Button variant=\"danger\" onClick={handleClose}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                                <Button  className=\"text-center btn-primary btn-icon mt-lg-0 mt-md-0 mt-3\" onClick={handleShow1}>\r\n                                    <i className=\"btn-inner\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                                        </svg>\r\n                                    </i>\r\n                                    <span>New Role</span>\r\n                                </Button>\r\n                                <Modal show={show1} onHide={handleClose1}>\r\n                                    <Modal.Header closeButton>\r\n                                    <Modal.Title>Add new role</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                            <Form.Label>role title</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Role Title\"  defaultValue={roleedit} onChange={e => setName1(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label >status</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Check>\r\n                                            <Form.Check.Input type=\"radio\"  name=\"customRadio0\" id=\"automatically\" defaultChecked/>{' '}\r\n                                            <Form.Check.Label htmlFor=\"automatically\" className=\"pl-2\">yes</Form.Check.Label>\r\n                                        </Form.Check>\r\n                                        <Form.Check className=\"mb-3\">\r\n                                            <Form.Check.Input type=\"radio\"  name=\"customRadio0\" id=\"automatically\" defaultChecked/>{' '}\r\n                                            <Form.Check.Label htmlFor=\"automatically\" className=\"pl-2\">no</Form.Check.Label>\r\n                                        </Form.Check>\r\n                                        <Button variant=\"primary\" onClick={\r\n                                          () =>{\r\n                                            rolepush()\r\n                                            handleClose1()\r\n                                          }\r\n                                        }>\r\n                                            Save\r\n                                        </Button>{' '}\r\n                                        <Button variant=\"danger\" onClick={handleClose1}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                                <Modal show={show2}  onHide={handleClose2}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit permission</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Role</Form.Label>\r\n                                                <Form.Control type=\"text\" defaultValue={editname}  onChange={e => setName(e.target.value)} placeholder=\"Permission Title\" />\r\n                                        </Form.Group>\r\n                                        <div>\r\n                                            <div className=\"text-start mt-2 me-2\">\r\n                                                <Button onClick={ \r\n                                                    () =>{\r\n                                                        permissionupdate()\r\n                                                        handleClose2()\r\n                                                    }\r\n                                                } >Update</Button>{' '}\r\n                                                <Button  variant=\"danger\" onClick={handleClose2} >Cancel1</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                                <Modal show={show3} onHide={handleClose3}>\r\n                                    <Modal.Header closeButton>\r\n                                    <Modal.Title>Edit role</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                            <Form.Label>role title</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Role Title\" defaultValue={roleeditname}  onChange={e => setName1(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicPassword\">\r\n                                            <Form.Label >status</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Check>\r\n                                            <Form.Check.Input type=\"radio\"  name=\"customRadio0\" id=\"automatically\" defaultChecked/>{' '}\r\n                                            <Form.Check.Label htmlFor=\"automatically\" className=\"pl-2\">yes</Form.Check.Label>\r\n                                        </Form.Check>\r\n                                        <Form.Check className=\"mb-3\">\r\n                                            <Form.Check.Input type=\"radio\"  name=\"customRadio0\" id=\"automatically\" defaultChecked/>{' '}\r\n                                            <Form.Check.Label htmlFor=\"automatically\" className=\"pl-2\">no</Form.Check.Label>\r\n                                        </Form.Check>\r\n                                        <Button variant=\"primary\"onClick={ \r\n                                                    () =>{\r\n                                                        roleupdate()\r\n                                                        handleClose3()\r\n                                                        }\r\n                                                    }>\r\n                                            Update\r\n                                        </Button>{' '}\r\n                                        <Button variant=\"danger\" onClick={handleClose3}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Modal.Body>\r\n                                </Modal>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th></th>\r\n                                            {\r\n                                                role.map((item ,index) =>\r\n\r\n                                                (\r\n                                            <th className=\"text-center\" key={index} >{item.name}\r\n                                                <div style={{float:\"right\"}}>\r\n                                                <Link className=\"btn btn-sm btn-icon text-primary flex-end\" data-bs-toggle=\"tooltip\" title=\"Edit User\" to=\"#\"    onClick={() => {roleedit(item.name,true,index)}}>\r\n                                                    <span className=\"btn-inner\">\r\n                                                        <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                                                            <path d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M15.1655 4.60254L19.7315 9.16854\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </Link>\r\n                                                <Link className=\"btn btn-sm btn-icon text-danger\"  data-bs-toggle=\"tooltip\" title=\"Delete User\" to=\"#\" onClick={() => {roledeleted(index)}}>\r\n                                                    <span className=\"btn-inner\">\r\n                                                        <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\">\r\n                                                            <path d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M20.708 6.23975H3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </Link>\r\n                                                </div>\r\n                                            </th>\r\n                                                ))  \r\n                                            }\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                             permission.map((item ,index) =>\r\n                                            (\r\n                                                    <tr className=\"\" key={index} >\r\n                                                        <td className=\"\">{item.name}\r\n                                                            <div style={{float:\"right\"}}>\r\n                                                                <Link className=\"btn btn-sm btn-icon text-primary flex-end\" data-bs-toggle=\"tooltip\" title=\"Edit User\" to=\"#\"  onClick={() => {permissionedit(item.name,true,index)}} >\r\n                                                                    <span className=\"btn-inner\">\r\n                                                                        <svg   width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                                                                            <path d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                            <path d=\"M15.1655 4.60254L19.7315 9.16854\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                        </svg>\r\n                                                                    </span>\r\n                                                                </Link>\r\n                                                                <Link className=\"btn btn-sm btn-icon text-danger \"  data-bs-toggle=\"tooltip\" title=\"Delete User\" to=\"#\"  onClick={() => {permissiondeleted(index)}}  >\r\n\r\n\r\n                                                                    <span className=\"btn-inner\">\r\n                                                                        <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\">\r\n                                                                            <path d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                            <path d=\"M20.708 6.23975H3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                            <path d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                                        </svg>\r\n                                                                    </span>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                       { role.map((item1 ,index) =>(\r\n                                                        <td className=\"text-center\" key={index}>\r\n                                                            { item1.status && item.status === true ?\r\n                                                                 <input className=\"form-check-input\" type=\"checkbox\" defaultChecked />\r\n                                                                 :<input className=\"form-check-input\" type=\"checkbox\"/>\r\n\r\n                                                            }\r\n                                                        </td>\r\n                                                         ))}\r\n                                                        {/* <td className=\"text-center\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\"/>\r\n                                                        </td>\r\n                                                        <td className=\"text-center\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\"/>\r\n                                                        </td> */}\r\n                                                    </tr>\r\n                                            ))  \r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className=\"text-center\">\r\n                                <Button onClick={() => history.push('/dashboard/admin/admin')} type=\"button\" variant=\"primary\">Save</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                        \r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default Admin;"],"names":["useState","show","setShow","handleClose","show1","setShow1","handleClose1","show2","setShow2","handleClose2","show3","setShow3","handleClose3","history","useHistory","name","status","permission","setPermission","setName","editname","setEditname","permissionupdateid","setUpdate","useEffect","role","setRole","name1","setName1","roleeditname","setRolename","roleupdateid","setUpdate1","roleedit","rolename","openmodal","roleid","sm","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onHide","closeButton","controlId","type","onChange","e","target","value","placeholder","variant","push","defaultValue","id","defaultChecked","htmlFor","map","item","index","style","float","title","to","width","fillRule","clipRule","splice","roledeleted","permissionname","permissionid","permissiondeleted","item1"],"sourceRoot":""}